5 abstractions
    webhook (producer)
        receives webrequests from Github; forks handling of them
        writes to queuestore

        abstract into Hackage library eventually

    ui
        serves webrequests
        queries queuestore

    queuestore
        stores a map: repo -> job queue

    user / authentication datastore

    consumer
        regularly polls queuestore
        forks new jobs; executes them
        updates queuestore when task is consumed
        talks to Travis

TODO:
    testing
    docs
    mock DB / network for testing?
    handleGithubWebrequest types could be better?

    liftMonadTrans :: (MonadTrans t, Monad m, Monad m1) => (m a -> m1 a) -> t m a -> t m1 a
    liftMonadTrans liftMonad = lift . liftMonad . run

    get rid of Strings

    better error message on issue comment parse fail

    access queuestore over network

    QueueStore.Types.Job replaces RequestParser.ParsedRequest? How will we deal with the Repo field?

    don't serialize in QueueStore because it's slow?

    concurrency everywhere

    API.hs -- policy if can't load queue? Initialize upon repo setup?

    Repo.fullName to Repo DB